import s from '../../Style/LogicPageStyle/Logic.module.scss'
import qwOne from '../../img/que_one_logic.png'
import qwOneTrue from '../../img/que_one2_logic.png'
import React, { useState, useEffect, useRef } from 'react';
import Checkbox from '../AdditionalPage/CheckBox';
import classNames from 'classnames';

import anime from 'animejs';

const TestLogic = () => {
    const [showResults, setShowResults] = useState(false);
    const [isCorrect, setIsCorrect] = useState(false);
    const [isCorrectAnswer, setIsCorrectAnswer] = useState(false);
    const [selectedOptions, setSelectedOptions] = useState({
        test1: null,
        test2: null,
        test3: null,
    });
    const test1Ref = useRef(null);
    const test2Ref = useRef(null);
    const test3Ref = useRef(null);
    const container = useRef(null);

    const correctAnswers = {
        test1: 'checkbox3-test1',
        test2: 'checkbox3-test2',
        test3: 'checkbox2-test3',
    };

    useEffect(() => {
        setIsCorrectAnswer(showResults && selectedOptions.test1 === correctAnswers.test1);
    }, [showResults, selectedOptions, correctAnswers]);


    const test = {
        one: "1. Виберіть номер місця, на якому стоїть автомобіль:",
        two: "2. У ряд лежать 8 олівців різного кольору. Синій - третій зліва. Жовтий - четвертий справа.Скільки олівців між синім і жовтим:",
        three: "3. Вкажіть правильну відповідь:",

    }



    const handleCheckboxChange = (id, test) => {
        setSelectedOptions({
            ...selectedOptions,
            [test]: id,
        });
    };


    useEffect(() => {
        if (showResults) {
            const tests = ['test1', 'test2', 'test3'];
            tests.forEach(testKey => {
                const isCorrect = selectedOptions[testKey] === correctAnswers[testKey];
                anime({
                    targets: `.${s[testKey]}`,
                    backgroundColor: isCorrect ? '#98C194' : '#DD7474',
                    duration: 1000,
                    easing: 'easeInOutQuad',
                    complete: () => {
                        anime({
                            targets: `.${s[testKey]}`,
                            backgroundColor: '#FFFFFF',
                            duration: 1000,
                            easing: 'easeInOutQuad'
                        });
                    }
                });
            });
        }

        const isCorrect2 = selectedOptions['test2'] === correctAnswers['test2'];
        if (isCorrect2) {
            const isMobile = window.innerWidth < 430; // Перевірка, чи екран мобільний (менше 768px шириною)
            const pencilAnimations = [
                { targets: '.pencil1', translateX: isMobile ? 45 : 185, easing: 'easeInOutQuad' },
                { targets: '.pencil2', translateX: isMobile ? 60 : -60, easing: 'easeInOutQuad' },
                { targets: '.pencil3', translateX: isMobile ? 15 : 10, easing: 'easeInOutQuad' },
                { targets: '.pencil4', translateX: isMobile ? -70 : -110, easing: 'easeInOutQuad' },
                { targets: '.pencil5', translateX: isMobile ? -75 : 30, easing: 'easeInOutQuad' },
                // Додайте інші анімаційні параметри для інших олівців
            ];

            // Створити анімацію для кожного олівця
            pencilAnimations.forEach(animation => {
                anime(animation);
            });
            anime({
                targets: '.pencil4',
                translateY: '-4em',
                translateX: -250,
                rotate: "-30deg",
                duration: 1000,
                easing: 'easeInOutQuad',
                // height: 200,
                complete: () => {
                    anime({
                        targets: "#test_two",
                        color: '#F08D18',
                        easing: 'easeInOutQuad',
                        complete: () => {
                            anime({
                                targets: '.pencil4',
                                translateY: 0,
                                translateX: -110,
                                duration: 1000,
                                rotate: "0deg",
                                easing: 'easeInOutQuad',
                            })
                        }
                    });
                }
            })


        }

        const isCorrectTest3 = selectedOptions['test3'] === correctAnswers['test3'];

        const svgPath = document.querySelector('.svg-path3');


        if (isCorrectTest3) {
            anime.remove('.svg-path3'); 

            svgPath.setAttribute('d', 'M600.256 60.52 c3.466 0 6.56 .773 9.28 2.32 c2.72 1.493 4.826 3.6 6.32 6.32 c1.493 2.72 2.24 5.867 2.24 9.44 c0 3.733 -.88 7.04 -2.64 9.92 c-1.76 2.88 -4.24 5.12 -7.44 6.72 c-3.147 1.6 -6.8 2.4 -10.96 2.4 c-3.307 0 -6.534 -.507 -9.68 -1.52 c-3.147 -1.013 -5.867 -2.427 -8.16 -4.24 c-.8 -.587 -1.36 -1.2 -1.68 -1.84 c-.32 -.693 -.48 -1.52 -.48 -2.48 c0 -1.387 .373 -2.56 1.12 -3.52 c.8 -1.013 1.76 -1.52 2.88 -1.52 c.64 0 1.226 .107 1.76 .32 c.533 .16 1.226 .48 2.08 .96 c2.133 1.28 4.08 2.293 5.84 3.04 c1.76 .693 3.68 1.04 5.76 1.04 c3.253 0 5.706 -.747 7.36 -2.24 c1.706 -1.493 2.56 -3.707 2.56 -6.64 c0 -2.773 -.88 -4.96 -2.64 -6.56 c-1.707 -1.6 -4.027 -2.4 -6.96 -2.4 c-1.814 0 -3.467 .24 -4.96 .72 c-1.494 .427 -3.12 1.173 -4.88 2.24 c-1.12 .64 -2.24 .96 -3.36 .96 c-1.28 0 -2.374 -.373 -3.28 -1.12 c-.854 -.8 -1.28 -1.84 -1.28 -3.12 V46.44 c0 -1.867 .506 -3.307 1.52 -4.32 c1.013 -1.013 2.453 -1.52 4.32 -1.52 h25.76 c3.946 0 5.92 1.573 5.92 4.72 c0 3.2 -1.974 4.8 -5.92 4.8 h-19.44 v12.56 c2.56 -1.44 5.573 -2.16 9.04 -2.16 z');
            svgPath.style.transform = 'translateY(200px)';
        } else {
            
            svgPath.setAttribute('d', 'M596.865 276.278C595.519 276.278 594.458 275.797 593.682 274.833C592.957 273.87 592.595 272.51 592.595 270.753C592.595 268.09 593.061 265.88 593.992 264.123C594.924 262.31 596.218 260.468 597.875 258.598C599.065 257.182 599.945 255.963 600.515 254.943C601.136 253.923 601.446 252.79 601.446 251.543C601.446 250.297 601.032 249.305 600.204 248.568C599.376 247.832 598.237 247.463 596.788 247.463C595.597 247.463 594.406 247.718 593.216 248.228C592.077 248.682 590.783 249.362 589.334 250.268L587.47 251.288C585.71 252.365 584.286 252.903 583.199 252.903C581.905 252.903 580.792 252.308 579.861 251.118C578.981 249.872 578.541 248.37 578.541 246.613C578.541 245.423 578.722 244.432 579.084 243.638C579.498 242.845 580.145 242.08 581.025 241.343C583.355 239.473 585.995 238.028 588.945 237.008C591.948 235.932 594.95 235.393 597.952 235.393C601.317 235.393 604.319 236.045 606.959 237.348C609.599 238.595 611.67 240.352 613.171 242.618C614.672 244.828 615.423 247.35 615.423 250.183C615.423 252.28 615.009 254.207 614.181 255.963C613.404 257.72 612.446 259.222 611.308 260.468C610.169 261.715 608.693 263.217 606.882 264.973C605.173 266.503 603.854 267.835 602.922 268.968C602.042 270.045 601.472 271.178 601.213 272.368C601.006 273.615 600.489 274.578 599.661 275.258C598.884 275.938 597.952 276.278 596.865 276.278ZM597.021 296.593C594.898 296.593 593.112 295.8 591.663 294.213C590.265 292.627 589.566 290.672 589.566 288.348C589.566 286.025 590.265 284.07 591.663 282.483C593.112 280.897 594.898 280.103 597.021 280.103C599.195 280.103 600.981 280.897 602.378 282.483C603.828 284.07 604.552 286.025 604.552 288.348C604.552 290.672 603.828 292.627 602.378 294.213C600.981 295.8 599.195 296.593 597.021 296.593Z" fill="#F24949"');
            anime({
                targets: '.svg-path3', 
                translateY: [
                    { value: 0, duration: 0 }, 
                    { value: -15, duration: 1000, easing: 'easeInOutQuad' }, 
                    { value: 0, duration: 1000, easing: 'easeInOutQuad' } 
                ],
                loop: true 
            });
        }


    }, [showResults, selectedOptions, correctAnswers]);

    const handlePrintResults = () => {
        const newResults = {};
        for (const test in selectedOptions) {
            const selectedOption = selectedOptions[test];
            const correctAnswer = correctAnswers[test];
            const isCorrect = selectedOption === correctAnswer;
            newResults[test] = isCorrect;
        }
        setIsCorrect(newResults); // Припускаємо, що показуємо результат лише для першого тесту для демонстрації
        setShowResults(true);

        // Перевіряємо, чи в першому тесті була правильна відповідь
        if (newResults['test1']) {
            setIsCorrectAnswer(true);
        } else {
            setIsCorrectAnswer(false);
        }
        const isCorrectTest1 = selectedOptions['test1'] === correctAnswers['test1'];
        const isCorrectTest2 = selectedOptions['test2'] === correctAnswers['test2'];
        const isCorrectTest3 = selectedOptions['test3'] === correctAnswers['test3'];
        const containerR = container.current;
        const test1 = test1Ref.current;
        const test2 = test2Ref.current;
        const test3 = test3Ref.current;
        if(!isCorrectTest1){
            anime({
                targets: test1,
                translateY: -1000,
                duration: 1000,
                easing: 'easeInOutQuad',
                complete: () => {
                    containerR.insertBefore(test1, test2);
                    containerR.insertBefore(test1, test3);
                    anime({
                        targets: test1,
                        translateY: [1000, 0],
                        duration: 1000,
                        easing: 'easeInOutQuad',
                    });
                }
            });
        }
        if (!isCorrectTest2) {
            anime({
                targets: test2,
                translateY: -1000,
                duration: 1000,
                easing: 'easeInOutQuad',
                complete: () => {
                    containerR.insertBefore(test2, test1);
                    containerR.insertBefore(test2, test3);
                    anime({
                        targets: test2,
                        translateY: [1000, 0],
                        duration: 1000,
                        easing: 'easeInOutQuad',
                    });
                }
            });
        }
        if (!isCorrectTest3) {
            anime({
                targets: test3,
                translateY: -1000,
                duration: 1000,
                easing: 'easeInOutQuad',
                complete: () => {
                    containerR.insertBefore(test3, test1);
                    containerR.insertBefore(test3, test2);
                    anime({
                        targets: test3,
                        translateY: [1000, 0],
                        duration: 1000,
                        easing: 'easeInOutQuad',
                    });
                }
            });
        }

        window.scrollTo({ top: 0, behavior: 'smooth' });
    };


    return (
        <div ref={container} className={s.test_box}>
            <div ref={test1Ref} className={classNames(s.first_test, s.test1, {
                [s.correctBorder1]: showResults && selectedOptions.test1 === correctAnswers.test1,
                [s.incorrectBorder1]: showResults && selectedOptions.test1 !== correctAnswers.test1
            })}>

                <div className={s.head_one}><p>{test.one}</p></div>
                <div className={s.box_one}> <img src={isCorrectAnswer ? qwOneTrue : qwOne} alt="#" /></div>


                <div className={s.check_container}>
                    <Checkbox
                        id="checkbox1-test1"
                        isChecked={selectedOptions.test1 === 'checkbox1-test1'}
                        onChange={(id) => handleCheckboxChange(id, 'test1')}
                        label="A.68"
                    />
                    <Checkbox
                        id="checkbox2-test1"
                        isChecked={selectedOptions.test1 === 'checkbox2-test1'}
                        onChange={(id) => handleCheckboxChange(id, 'test1')}
                        label="B.99"
                    />
                    <Checkbox
                        id="checkbox3-test1"
                        isChecked={selectedOptions.test1 === 'checkbox3-test1'}
                        onChange={(id) => handleCheckboxChange(id, 'test1')}
                        label="C.87"
                    />
                    <Checkbox
                        id="checkbox4-test1"
                        isChecked={selectedOptions.test1 === 'checkbox4-test1'}
                        onChange={(id) => handleCheckboxChange(id, 'test1')}
                        label="D.89"
                    />
                </div>
            </div>

            <div ref={test2Ref} className={classNames(s.two_test, s.test2, {
                [s.correctBorder2]: showResults && selectedOptions.test2 === correctAnswers.test2,
                [s.incorrectBorder2]: showResults && selectedOptions.test2 !== correctAnswers.test2
            })}>
                <div className={s.head_two}><p id='test_two'>{test.two}</p> </div>

                <div className={s.two_container}>
                    <div className={s.check_container2}>
                        <Checkbox
                            id="checkbox1-test2"
                            isChecked={selectedOptions.test2 === 'checkbox1-test2'}
                            onChange={(id) => handleCheckboxChange(id, 'test2')}
                            label="A.3"
                        />
                        <Checkbox
                            id="checkbox2-test2"
                            isChecked={selectedOptions.test2 === 'checkbox2-test2'}
                            onChange={(id) => handleCheckboxChange(id, 'test2')}
                            label="B.5"
                        />
                        <Checkbox
                            id="checkbox3-test2"
                            isChecked={selectedOptions.test2 === 'checkbox3-test2'}
                            onChange={(id) => handleCheckboxChange(id, 'test2')}
                            label="C.1" // Передача унікального тексту для третього чекбоксу
                        />
                    </div>
                    <div className={s.img_cont}>
                        <svg className='pencil1' width="55" height="261" viewBox="0 0 55 261" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_293_49)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 244.823C0 254.524 6.75354 261 14.4742 261H40.5258C49.2113 261 55 254.527 55 244.823H0Z" fill="#2D4191" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M16.4038 244.823C16.4038 254.527 23.1574 261 30.878 261H40.5259C49.2113 261 55.0001 254.527 55.0001 244.823H16.4038Z" fill="#2F3D71" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L0 52.846V63.6323H55V52.846L27.9813 0Z" fill="#F3CD84" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 52.846V63.6323H16.4037V52.846L27.9812 0L0 52.846Z" fill="#FAD692" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9812 0L38.5962 52.846V63.6323H54.9999V52.846L27.9812 0Z" fill="#E5BD72" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L20.2629 12.9415C20.2629 12.9415 24.1221 15.0992 27.9813 15.0992C30.8779 15.0992 34.7371 12.9415 34.7371 12.9415L27.9813 0ZM47.2794 60.3969C38.5963 60.3969 38.5962 52.846 38.5962 52.846C38.5962 52.846 38.5963 60.3969 27.9835 60.3969C16.4038 60.3969 16.4038 52.846 16.4038 52.846C16.4038 52.846 16.4038 60.3969 8.68313 60.3969C0 60.3969 0 52.846 0 52.846V248.056H55V52.8486C55 52.8486 55 60.3969 47.2794 60.3969Z" fill="#2D4191" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.68542 60.397C0 60.397 0 52.8461 0 52.8461V248.056H16.4037V52.8487C16.4037 52.8487 16.4037 60.3944 8.68312 60.3944L8.68542 60.397Z" fill="#3959A3" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M47.2816 60.397C38.5962 60.397 38.5962 52.8461 38.5962 52.8461V248.056H54.9999V52.8487C54.9999 52.8487 54.9999 60.397 47.2816 60.397Z" fill="#2F3D71" />
                            </g>
                            <defs>
                                <clipPath id="clip0_293_49">
                                    <rect width="55" height="261" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>

                        <svg className='pencil2' width="55" height="261" viewBox="0 0 55 261" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_293_58)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 244.823C0 254.524 6.75354 261 14.4742 261H40.5258C49.2113 261 55 254.527 55 244.823H0Z" fill="#E31B1B" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M16.4038 244.823C16.4038 254.527 23.1574 261 30.878 261H40.5259C49.2113 261 55.0001 254.527 55.0001 244.823H16.4038Z" fill="#BE0D0D" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L0 52.846V63.6323H55V52.846L27.9813 0Z" fill="#F3CD84" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 52.846V63.6323H16.4037V52.846L27.9812 0L0 52.846Z" fill="#FAD692" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9812 0L38.5962 52.846V63.6323H54.9999V52.846L27.9812 0Z" fill="#E5BD72" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L20.2629 12.9415C20.2629 12.9415 24.1221 15.0992 27.9813 15.0992C30.8779 15.0992 34.7371 12.9415 34.7371 12.9415L27.9813 0ZM47.2794 60.3969C38.5963 60.3969 38.5962 52.846 38.5962 52.846C38.5962 52.846 38.5963 60.3969 27.9835 60.3969C16.4038 60.3969 16.4038 52.846 16.4038 52.846C16.4038 52.846 16.4038 60.3969 8.68313 60.3969C0 60.3969 0 52.846 0 52.846V248.056H55V52.8486C55 52.8486 55 60.3969 47.2794 60.3969Z" fill="#E31B1B" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.68542 60.397C0 60.397 0 52.8461 0 52.8461V248.056H16.4037V52.8487C16.4037 52.8487 16.4037 60.3944 8.68312 60.3944L8.68542 60.397Z" fill="#F64D4D" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M47.2816 60.397C38.5962 60.397 38.5962 52.8461 38.5962 52.8461V248.056H54.9999V52.8487C54.9999 52.8487 54.9999 60.397 47.2816 60.397Z" fill="#BE0D0D" />
                            </g>
                            <defs>
                                <clipPath id="clip0_293_58">
                                    <rect width="55" height="261" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>

                        <svg className='pencil3' width="55" height="261" viewBox="0 0 55 261" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_293_67)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 244.823C0 254.524 6.75354 261 14.4742 261H40.5258C49.2113 261 55 254.527 55 244.823H0Z" fill="#30954C" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M16.4038 244.823C16.4038 254.527 23.1574 261 30.878 261H40.5259C49.2113 261 55.0001 254.527 55.0001 244.823H16.4038Z" fill="#33712D" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L0 52.846V63.6323H55V52.846L27.9813 0Z" fill="#F3CD84" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 52.846V63.6323H16.4037V52.846L27.9812 0L0 52.846Z" fill="#FAD692" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9812 0L38.5962 52.846V63.6323H54.9999V52.846L27.9812 0Z" fill="#E5BD72" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L20.2629 12.9415C20.2629 12.9415 24.1221 15.0992 27.9813 15.0992C30.8779 15.0992 34.7371 12.9415 34.7371 12.9415L27.9813 0ZM47.2794 60.3969C38.5963 60.3969 38.5962 52.846 38.5962 52.846C38.5962 52.846 38.5963 60.3969 27.9835 60.3969C16.4038 60.3969 16.4038 52.846 16.4038 52.846C16.4038 52.846 16.4038 60.3969 8.68313 60.3969C0 60.3969 0 52.846 0 52.846V248.056H55V52.8486C55 52.8486 55 60.3969 47.2794 60.3969Z" fill="#30954C" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.68542 60.397C0 60.397 0 52.8461 0 52.8461V248.056H16.4037V52.8487C16.4037 52.8487 16.4037 60.3944 8.68312 60.3944L8.68542 60.397Z" fill="#4BBB50" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M47.2816 60.397C38.5962 60.397 38.5962 52.8461 38.5962 52.8461V248.056H54.9999V52.8487C54.9999 52.8487 54.9999 60.397 47.2816 60.397Z" fill="#33712D" />
                            </g>
                            <defs>
                                <clipPath id="clip0_293_67">
                                    <rect width="55" height="261" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>

                        <svg className='pencil4' width="55" height="261" viewBox="0 0 55 261" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_293_76)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 244.823C0 254.524 6.75354 261 14.4742 261H40.5258C49.2113 261 55 254.527 55 244.823H0Z" fill="#F08D18" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M16.4038 244.823C16.4038 254.527 23.1574 261 30.878 261H40.5259C49.2113 261 55.0001 254.527 55.0001 244.823H16.4038Z" fill="#ED770B" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L0 52.846V63.6323H55V52.846L27.9813 0Z" fill="#F3CD84" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 52.846V63.6323H16.4037V52.846L27.9812 0L0 52.846Z" fill="#FAD692" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9812 0L38.5962 52.846V63.6323H54.9999V52.846L27.9812 0Z" fill="#E5BD72" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L20.2629 12.9415C20.2629 12.9415 24.1221 15.0992 27.9813 15.0992C30.8779 15.0992 34.7371 12.9415 34.7371 12.9415L27.9813 0ZM47.2794 60.3969C38.5963 60.3969 38.5962 52.846 38.5962 52.846C38.5962 52.846 38.5963 60.3969 27.9835 60.3969C16.4038 60.3969 16.4038 52.846 16.4038 52.846C16.4038 52.846 16.4038 60.3969 8.68313 60.3969C0 60.3969 0 52.846 0 52.846V248.056H55V52.8486C55 52.8486 55 60.3969 47.2794 60.3969Z" fill="#F08D18" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.68542 60.397C0 60.397 0 52.8461 0 52.8461V248.056H16.4037V52.8487C16.4037 52.8487 16.4037 60.3944 8.68312 60.3944L8.68542 60.397Z" fill="#F79943" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M47.2816 60.397C38.5962 60.397 38.5962 52.8461 38.5962 52.8461V248.056H54.9999V52.8487C54.9999 52.8487 54.9999 60.397 47.2816 60.397Z" fill="#ED770B" />
                            </g>
                            <defs>
                                <clipPath id="clip0_293_76">
                                    <rect width="55" height="261" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>

                        <svg className='pencil5' width="55" height="261" viewBox="0 0 55 261" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_293_85)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 244.823C0 254.524 6.75354 261 14.4742 261H40.5258C49.2113 261 55 254.527 55 244.823H0Z" fill="#F4EE4B" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M16.4038 244.823C16.4038 254.527 23.1574 261 30.878 261H40.5259C49.2113 261 55.0001 254.527 55.0001 244.823H16.4038Z" fill="#EEE400" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L0 52.846V63.6323H55V52.846L27.9813 0Z" fill="#F3CD84" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M0 52.846V63.6323H16.4037V52.846L27.9812 0L0 52.846Z" fill="#FAD692" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9812 0L38.5962 52.846V63.6323H54.9999V52.846L27.9812 0Z" fill="#E5BD72" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M27.9813 0L20.2629 12.9415C20.2629 12.9415 24.1221 15.0992 27.9813 15.0992C30.8779 15.0992 34.7371 12.9415 34.7371 12.9415L27.9813 0ZM47.2794 60.3969C38.5963 60.3969 38.5962 52.846 38.5962 52.846C38.5962 52.846 38.5963 60.3969 27.9835 60.3969C16.4038 60.3969 16.4038 52.846 16.4038 52.846C16.4038 52.846 16.4038 60.3969 8.68313 60.3969C0 60.3969 0 52.846 0 52.846V248.056H55V52.8486C55 52.8486 55 60.3969 47.2794 60.3969Z" fill="#F4EE4B" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.68542 60.397C0 60.397 0 52.8461 0 52.8461V248.056H16.4037V52.8487C16.4037 52.8487 16.4037 60.3944 8.68312 60.3944L8.68542 60.397Z" fill="#F9FC5D" />
                                <path fillRule="evenodd" clipRule="evenodd" d="M47.2816 60.397C38.5962 60.397 38.5962 52.8461 38.5962 52.8461V248.056H54.9999V52.8487C54.9999 52.8487 54.9999 60.397 47.2816 60.397Z" fill="#EEE400" />
                            </g>
                            <defs>
                                <clipPath id="clip0_293_85">
                                    <rect width="55" height="261" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>
                    </div>

                </div>

            </div>
            <div ref={test3Ref} className={classNames(s.three_test, s.test3, {
                [s.correctBorder3]: showResults && selectedOptions.test3 === correctAnswers.test3,
                [s.incorrectBorder3]: showResults && selectedOptions.test3 !== correctAnswers.test3
            })}>

                <div className={s.head_three}><p>{test.three}</p> </div>
                <div className={s.three_img}>
                    <svg className='svg_three_test' width="660" height="340" viewBox="0 0 660 340" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M628.941 216.75H566.824C558.247 216.75 551.294 224.361 551.294 233.75V301.75C551.294 311.139 558.247 318.75 566.824 318.75H628.941C637.518 318.75 644.471 311.139 644.471 301.75V233.75C644.471 224.361 637.518 216.75 628.941 216.75Z" fill="#FFEACC" />
                        <path d="M628.941 216.75H566.824C558.247 216.75 551.294 224.361 551.294 233.75V301.75C551.294 311.139 558.247 318.75 566.824 318.75H628.941C637.518 318.75 644.471 311.139 644.471 301.75V233.75C644.471 224.361 637.518 216.75 628.941 216.75Z" fill="#E5F2FF" />
                        <path fillRule="evenodd" clipRule="evenodd" d="M431.995 222.995C434.072 218.447 432.388 212.915 428.233 210.641C424.079 208.366 419.025 210.211 416.948 214.76L381.36 292.676C380.055 295.529 380.195 298.92 381.727 301.635C383.261 304.348 385.968 305.999 388.884 305.999H429.001V315.207C429.001 320.293 432.767 324.415 437.413 324.415C442.059 324.415 445.825 320.293 445.825 315.207V306H456.178C460.824 306 464.59 301.878 464.59 296.792C464.59 291.709 460.824 287.583 456.178 287.583H445.825V267.75C445.825 262.667 442.059 258.542 437.413 258.542C432.767 258.542 429.001 262.667 429.001 267.75V287.583H402.494L431.996 222.995H431.995Z" fill="#39414B" />
                        <path d="M493.657 266.787C492.363 266.787 491.275 266.305 490.395 265.342C489.515 264.378 489.075 263.188 489.075 261.772C489.075 260.355 489.515 259.165 490.395 258.202C491.275 257.182 492.363 256.672 493.657 256.672H522.386C523.68 256.672 524.767 257.153 525.647 258.117C526.527 259.08 526.967 260.27 526.967 261.687C526.967 263.103 526.527 264.322 525.647 265.342C524.767 266.305 523.68 266.787 522.386 266.787H493.657ZM493.657 283.787C492.363 283.787 491.275 283.305 490.395 282.342C489.515 281.378 489.075 280.188 489.075 278.772C489.075 277.355 489.515 276.165 490.395 275.202C491.275 274.182 492.363 273.672 493.657 273.672H522.386C523.68 273.672 524.767 274.153 525.647 275.117C526.527 276.08 526.967 277.27 526.967 278.687C526.967 280.103 526.527 281.322 525.647 282.342C524.767 283.305 523.68 283.787 522.386 283.787H493.657Z" fill="#39414B" />
                        <path d="M261.412 218.167H199.294C190.717 218.167 183.765 225.778 183.765 235.167V303.167C183.765 312.556 190.717 320.167 199.294 320.167H261.412C269.988 320.167 276.941 312.556 276.941 303.167V235.167C276.941 225.778 269.988 218.167 261.412 218.167Z" fill="#FFEACC" />
                        <path d="M261.412 218.167H199.294C190.717 218.167 183.765 225.778 183.765 235.167V303.167C183.765 312.556 190.717 320.167 199.294 320.167H261.412C269.988 320.167 276.941 312.556 276.941 303.167V235.167C276.941 225.778 269.988 218.167 261.412 218.167Z" fill="#E5F2FF" />
                        <path d="M239.453 266.645C242.663 267.665 245.121 269.45 246.83 272C248.59 274.493 249.47 277.553 249.47 281.18C249.47 284.637 248.641 287.64 246.985 290.19C245.38 292.74 243.051 294.723 239.997 296.14C236.943 297.5 233.397 298.18 229.359 298.18C225.994 298.18 222.759 297.642 219.653 296.565C216.599 295.488 213.959 293.987 211.733 292.06C210.957 291.437 210.387 290.757 210.025 290.02C209.714 289.283 209.559 288.433 209.559 287.47C209.559 285.997 209.947 284.75 210.724 283.73C211.5 282.653 212.432 282.115 213.519 282.115C214.14 282.115 214.71 282.228 215.227 282.455C215.745 282.625 216.392 282.965 217.168 283.475C219.446 284.892 221.413 285.968 223.07 286.705C224.726 287.442 226.667 287.81 228.893 287.81C232.051 287.81 234.354 287.187 235.804 285.94C237.253 284.637 237.978 282.625 237.978 279.905C237.978 277.242 237.227 275.315 235.726 274.125C234.225 272.935 231.818 272.34 228.505 272.34H223.924C222.578 272.34 221.517 271.83 220.74 270.81C219.964 269.79 219.576 268.572 219.576 267.155C219.576 265.795 219.964 264.605 220.74 263.585C221.517 262.565 222.578 262.055 223.924 262.055H227.185C230.343 262.055 232.672 261.46 234.173 260.27C235.726 259.08 236.503 257.238 236.503 254.745C236.503 252.365 235.856 250.523 234.561 249.22C233.267 247.86 231.456 247.18 229.126 247.18C227.211 247.18 225.425 247.548 223.768 248.285C222.112 249.022 220.197 250.098 218.023 251.515C217.246 252.025 216.599 252.393 216.081 252.62C215.564 252.79 214.994 252.875 214.373 252.875C213.286 252.875 212.354 252.365 211.578 251.345C210.801 250.268 210.413 248.993 210.413 247.52C210.413 246.5 210.568 245.65 210.879 244.97C211.241 244.233 211.811 243.553 212.587 242.93C214.761 241.003 217.35 239.502 220.352 238.425C223.406 237.348 226.512 236.81 229.67 236.81C233.345 236.81 236.58 237.49 239.376 238.85C242.171 240.153 244.319 242.023 245.82 244.46C247.321 246.897 248.072 249.73 248.072 252.96C248.072 256.19 247.296 259.023 245.743 261.46C244.241 263.84 242.145 265.568 239.453 266.645Z" fill="#39414B" />
                        <path d="M239.453 266.645C242.663 267.665 245.121 269.45 246.83 272C248.59 274.493 249.47 277.553 249.47 281.18C249.47 284.637 248.641 287.64 246.985 290.19C245.38 292.74 243.051 294.723 239.997 296.14C236.943 297.5 233.397 298.18 229.359 298.18C225.994 298.18 222.759 297.642 219.653 296.565C216.599 295.488 213.959 293.987 211.733 292.06C210.957 291.437 210.387 290.757 210.025 290.02C209.714 289.283 209.559 288.433 209.559 287.47C209.559 285.997 209.947 284.75 210.724 283.73C211.5 282.653 212.432 282.115 213.519 282.115C214.14 282.115 214.71 282.228 215.227 282.455C215.745 282.625 216.392 282.965 217.168 283.475C219.446 284.892 221.413 285.968 223.07 286.705C224.726 287.442 226.667 287.81 228.893 287.81C232.051 287.81 234.354 287.187 235.804 285.94C237.253 284.637 237.978 282.625 237.978 279.905C237.978 277.242 237.227 275.315 235.726 274.125C234.225 272.935 231.818 272.34 228.505 272.34H223.924C222.578 272.34 221.517 271.83 220.74 270.81C219.964 269.79 219.576 268.572 219.576 267.155C219.576 265.795 219.964 264.605 220.74 263.585C221.517 262.565 222.578 262.055 223.924 262.055H227.185C230.343 262.055 232.672 261.46 234.173 260.27C235.726 259.08 236.503 257.238 236.503 254.745C236.503 252.365 235.856 250.523 234.561 249.22C233.267 247.86 231.456 247.18 229.126 247.18C227.211 247.18 225.425 247.548 223.768 248.285C222.112 249.022 220.197 250.098 218.023 251.515C217.246 252.025 216.599 252.393 216.081 252.62C215.564 252.79 214.994 252.875 214.373 252.875C213.286 252.875 212.354 252.365 211.578 251.345C210.801 250.268 210.413 248.993 210.413 247.52C210.413 246.5 210.568 245.65 210.879 244.97C211.241 244.233 211.811 243.553 212.587 242.93C214.761 241.003 217.35 239.502 220.352 238.425C223.406 237.348 226.512 236.81 229.67 236.81C233.345 236.81 236.58 237.49 239.376 238.85C242.171 240.153 244.319 242.023 245.82 244.46C247.321 246.897 248.072 249.73 248.072 252.96C248.072 256.19 247.296 259.023 245.743 261.46C244.241 263.84 242.145 265.568 239.453 266.645Z" fill="#446EC0" />
                        <path d="M260.765 25.5H198.647C190.07 25.5 183.118 33.1112 183.118 42.5V110.5C183.118 119.889 190.07 127.5 198.647 127.5H260.765C269.341 127.5 276.294 119.889 276.294 110.5V42.5C276.294 33.1112 269.341 25.5 260.765 25.5Z" fill="#FFEACC" />
                        <path d="M260.765 25.5H198.647C190.07 25.5 183.118 33.1112 183.118 42.5V110.5C183.118 119.889 190.07 127.5 198.647 127.5H260.765C269.341 127.5 276.294 119.889 276.294 110.5V42.5C276.294 33.1112 269.341 25.5 260.765 25.5Z" fill="#E5F2FF" />
                        <path d="M233.034 65.9033C236.244 65.9033 239.091 66.725 241.575 68.3683C244.112 70.0117 246.079 72.3067 247.477 75.2533C248.926 78.2 249.651 81.5433 249.651 85.2833C249.651 89.1933 248.848 92.7067 247.244 95.8233C245.639 98.8833 243.413 101.292 240.566 103.048C237.719 104.748 234.51 105.598 230.938 105.598C223.846 105.598 218.359 103.02 214.477 97.8633C210.594 92.7067 208.653 85.34 208.653 75.7633C208.653 69.36 209.559 63.7783 211.371 59.0183C213.182 54.2017 215.771 50.5183 219.135 47.9683C222.552 45.4183 226.512 44.1433 231.015 44.1433C233.966 44.1433 236.942 44.6817 239.945 45.7583C242.947 46.835 245.51 48.3367 247.632 50.2633C248.357 50.8867 248.874 51.5667 249.185 52.3033C249.547 52.9833 249.728 53.8333 249.728 54.8533C249.728 56.3267 249.34 57.6017 248.564 58.6783C247.839 59.6983 246.933 60.2083 245.846 60.2083C245.173 60.2083 244.578 60.1233 244.06 59.9533C243.594 59.7267 242.947 59.3583 242.119 58.8483C240.048 57.4883 238.185 56.44 236.528 55.7033C234.924 54.91 233.267 54.5133 231.559 54.5133C228.35 54.5133 225.787 56.1283 223.872 59.3583C222.008 62.5883 220.947 67.1217 220.688 72.9583C221.879 70.805 223.561 69.105 225.735 67.8583C227.91 66.555 230.343 65.9033 233.034 65.9033ZM230.239 95.3133C232.672 95.3133 234.613 94.435 236.062 92.6783C237.564 90.9217 238.314 88.5983 238.314 85.7083C238.314 82.875 237.564 80.58 236.062 78.8233C234.613 77.0667 232.672 76.1883 230.239 76.1883C227.806 76.1883 225.839 77.0667 224.338 78.8233C222.837 80.58 222.086 82.875 222.086 85.7083C222.086 88.5417 222.837 90.865 224.338 92.6783C225.839 94.435 227.806 95.3133 230.239 95.3133Z" fill="#39414B" />
                        <path d="M233.034 65.9033C236.244 65.9033 239.091 66.725 241.575 68.3683C244.112 70.0117 246.079 72.3067 247.477 75.2533C248.926 78.2 249.651 81.5433 249.651 85.2833C249.651 89.1933 248.848 92.7067 247.244 95.8233C245.639 98.8833 243.413 101.292 240.566 103.048C237.719 104.748 234.51 105.598 230.938 105.598C223.846 105.598 218.359 103.02 214.477 97.8633C210.594 92.7067 208.653 85.34 208.653 75.7633C208.653 69.36 209.559 63.7783 211.371 59.0183C213.182 54.2017 215.771 50.5183 219.135 47.9683C222.552 45.4183 226.512 44.1433 231.015 44.1433C233.966 44.1433 236.942 44.6817 239.945 45.7583C242.947 46.835 245.51 48.3367 247.632 50.2633C248.357 50.8867 248.874 51.5667 249.185 52.3033C249.547 52.9833 249.728 53.8333 249.728 54.8533C249.728 56.3267 249.34 57.6017 248.564 58.6783C247.839 59.6983 246.933 60.2083 245.846 60.2083C245.173 60.2083 244.578 60.1233 244.06 59.9533C243.594 59.7267 242.947 59.3583 242.119 58.8483C240.048 57.4883 238.185 56.44 236.528 55.7033C234.924 54.91 233.267 54.5133 231.559 54.5133C228.35 54.5133 225.787 56.1283 223.872 59.3583C222.008 62.5883 220.947 67.1217 220.688 72.9583C221.879 70.805 223.561 69.105 225.735 67.8583C227.91 66.555 230.343 65.9033 233.034 65.9033ZM230.239 95.3133C232.672 95.3133 234.613 94.435 236.062 92.6783C237.564 90.9217 238.314 88.5983 238.314 85.7083C238.314 82.875 237.564 80.58 236.062 78.8233C234.613 77.0667 232.672 76.1883 230.239 76.1883C227.806 76.1883 225.839 77.0667 224.338 78.8233C222.837 80.58 222.086 82.875 222.086 85.7083C222.086 88.5417 222.837 90.865 224.338 92.6783C225.839 94.435 227.806 95.3133 230.239 95.3133Z" fill="#446EC0" />
                        <path fillRule="evenodd" clipRule="evenodd" d="M78.2695 28.3418C78.4947 25.1614 77.2019 21.9427 74.6227 20.0175C70.7844 17.153 65.551 18.2367 62.9343 22.44L14.4048 100.357C12.6474 103.176 12.4598 106.828 13.917 109.845C15.3741 112.863 18.2341 114.75 21.353 114.75H61.4706V123.958C61.4706 129.044 65.2365 133.167 69.8824 133.167C74.5283 133.167 78.2941 129.044 78.2941 123.958V114.75H88.6471C93.293 114.75 97.0588 110.627 97.0588 105.542C97.0588 100.456 93.293 96.3333 88.6471 96.3333H78.2941V29.0417C78.2941 28.8065 78.2877 28.5742 78.2695 28.3418ZM61.4706 57.477L37.2706 96.3362H61.4706V57.4742V57.477Z" fill="#39414B" />
                        <path d="M126.127 75.5367C124.833 75.5367 123.746 75.055 122.866 74.0917C121.986 73.1283 121.546 71.9383 121.546 70.5217C121.546 69.105 121.986 67.915 122.866 66.9517C123.746 65.9317 124.833 65.4217 126.127 65.4217H154.857C156.151 65.4217 157.238 65.9033 158.118 66.8667C158.998 67.83 159.438 69.02 159.438 70.4367C159.438 71.8533 158.998 73.0717 158.118 74.0917C157.238 75.055 156.151 75.5367 154.857 75.5367H126.127ZM126.127 92.5367C124.833 92.5367 123.746 92.055 122.866 91.0917C121.986 90.1283 121.546 88.9383 121.546 87.5217C121.546 86.105 121.986 84.915 122.866 83.9517C123.746 82.9317 124.833 82.4217 126.127 82.4217H154.857C156.151 82.4217 157.238 82.9033 158.118 83.8667C158.998 84.83 159.438 86.02 159.438 87.4367C159.438 88.8533 158.998 90.0717 158.118 91.0917C157.238 92.055 156.151 92.5367 154.857 92.5367H126.127ZM126.774 265.37C125.48 265.37 124.393 264.888 123.513 263.925C122.633 262.962 122.193 261.772 122.193 260.355C122.193 258.938 122.633 257.748 123.513 256.785C124.393 255.765 125.48 255.255 126.774 255.255H155.504C156.798 255.255 157.885 255.737 158.765 256.7C159.645 257.663 160.085 258.853 160.085 260.27C160.085 261.687 159.645 262.905 158.765 263.925C157.885 264.888 156.798 265.37 155.504 265.37H126.774ZM126.774 282.37C125.48 282.37 124.393 281.888 123.513 280.925C122.633 279.962 122.193 278.772 122.193 277.355C122.193 275.938 122.633 274.748 123.513 273.785C124.393 272.765 125.48 272.255 126.774 272.255H155.504C156.798 272.255 157.885 272.737 158.765 273.7C159.645 274.663 160.085 275.853 160.085 277.27C160.085 278.687 159.645 279.905 158.765 280.925C157.885 281.888 156.798 282.37 155.504 282.37H126.774Z" fill="#39414B" />
                        <path fillRule="evenodd" clipRule="evenodd" d="M64.4651 224.411C66.5421 219.864 64.8585 214.332 60.7031 212.058C56.549 209.783 51.4954 211.627 49.4184 216.176L13.8302 294.093C12.5257 296.946 12.6654 300.336 14.1977 303.052C15.7312 305.765 18.4385 307.415 21.3541 307.415H61.4718V316.624C61.4718 321.709 65.2377 325.832 69.8836 325.832C74.5294 325.832 78.2953 321.709 78.2953 316.624V269.167C78.2953 264.084 74.5294 259.958 69.8836 259.958C65.2377 259.958 61.4718 264.084 61.4718 269.167V289H34.9631L64.4651 224.411Z" fill="#39414B" />
                        <path d="M628.941 25.5H566.824C558.247 25.5 551.294 33.1112 551.294 42.5V110.5C551.294 119.889 558.247 127.5 566.824 127.5H628.941C637.518 127.5 644.471 119.889 644.471 110.5V42.5C644.471 33.1112 637.518 25.5 628.941 25.5Z" fill="#FFEACC" />
                        <path d="M628.941 25.5H566.824C558.247 25.5 551.294 33.1112 551.294 42.5V110.5C551.294 119.889 558.247 127.5 566.824 127.5H628.941C637.518 127.5 644.471 119.889 644.471 110.5V42.5C644.471 33.1112 637.518 25.5 628.941 25.5Z" fill="#E5F2FF" />
                        <path className='svg-path3' d="M596.865 276.278C595.519 276.278 594.458 275.797 593.682 274.833C592.957 273.87 592.595 272.51 592.595 270.753C592.595 268.09 593.061 265.88 593.992 264.123C594.924 262.31 596.218 260.468 597.875 258.598C599.065 257.182 599.945 255.963 600.515 254.943C601.136 253.923 601.446 252.79 601.446 251.543C601.446 250.297 601.032 249.305 600.204 248.568C599.376 247.832 598.237 247.463 596.788 247.463C595.597 247.463 594.406 247.718 593.216 248.228C592.077 248.682 590.783 249.362 589.334 250.268L587.47 251.288C585.71 252.365 584.286 252.903 583.199 252.903C581.905 252.903 580.792 252.308 579.861 251.118C578.981 249.872 578.541 248.37 578.541 246.613C578.541 245.423 578.722 244.432 579.084 243.638C579.498 242.845 580.145 242.08 581.025 241.343C583.355 239.473 585.995 238.028 588.945 237.008C591.948 235.932 594.95 235.393 597.952 235.393C601.317 235.393 604.319 236.045 606.959 237.348C609.599 238.595 611.67 240.352 613.171 242.618C614.672 244.828 615.423 247.35 615.423 250.183C615.423 252.28 615.009 254.207 614.181 255.963C613.404 257.72 612.446 259.222 611.308 260.468C610.169 261.715 608.693 263.217 606.882 264.973C605.173 266.503 603.854 267.835 602.922 268.968C602.042 270.045 601.472 271.178 601.213 272.368C601.006 273.615 600.489 274.578 599.661 275.258C598.884 275.938 597.952 276.278 596.865 276.278ZM597.021 296.593C594.898 296.593 593.112 295.8 591.663 294.213C590.265 292.627 589.566 290.672 589.566 288.348C589.566 286.025 590.265 284.07 591.663 282.483C593.112 280.897 594.898 280.103 597.021 280.103C599.195 280.103 600.981 280.897 602.378 282.483C603.828 284.07 604.552 286.025 604.552 288.348C604.552 290.672 603.828 292.627 602.378 294.213C600.981 295.8 599.195 296.593 597.021 296.593Z" fill="#F24949" />


                        <path d="M614.98 83.7533C618.759 83.7533 620.649 85.425 620.649 88.7683C620.649 92.1683 618.759 93.8683 614.98 93.8683H612.107V98.7133C612.107 100.867 611.564 102.51 610.477 103.643C609.39 104.777 607.966 105.343 606.206 105.343C604.446 105.343 603.023 104.777 601.936 103.643C600.848 102.51 600.305 100.867 600.305 98.7133V93.8683H581.437C579.832 93.8683 578.564 93.3583 577.632 92.3383C576.7 91.2617 576.234 89.93 576.234 88.3433C576.234 86.7567 576.726 85.17 577.71 83.5833L600.848 47.3733C601.47 46.41 602.246 45.7017 603.178 45.2483C604.11 44.7383 605.093 44.4833 606.129 44.4833C607.733 44.4833 609.131 45.0783 610.321 46.2683C611.512 47.4017 612.107 48.9883 612.107 51.0283V83.7533H614.98ZM600.305 83.7533V65.0533L588.425 83.7533H600.305Z" fill="#39414B" />
                        <path d="M614.98 83.7533C618.759 83.7533 620.649 85.425 620.649 88.7683C620.649 92.1683 618.759 93.8683 614.98 93.8683H612.107V98.7133C612.107 100.867 611.564 102.51 610.477 103.643C609.39 104.777 607.966 105.343 606.206 105.343C604.446 105.343 603.023 104.777 601.936 103.643C600.848 102.51 600.305 100.867 600.305 98.7133V93.8683H581.437C579.832 93.8683 578.564 93.3583 577.632 92.3383C576.7 91.2617 576.234 89.93 576.234 88.3433C576.234 86.7567 576.726 85.17 577.71 83.5833L600.848 47.3733C601.47 46.41 602.246 45.7017 603.178 45.2483C604.11 44.7383 605.093 44.4833 606.129 44.4833C607.733 44.4833 609.131 45.0783 610.321 46.2683C611.512 47.4017 612.107 48.9883 612.107 51.0283V83.7533H614.98ZM600.305 83.7533V65.0533L588.425 83.7533H600.305Z" fill="#446EC0" />
                        <path fillRule="evenodd" clipRule="evenodd" d="M439.891 18.8247C440.894 19.1647 441.82 19.7002 442.622 20.3972C443.569 21.2117 444.317 22.2147 444.85 23.3226C445.51 24.6925 445.843 26.2225 445.824 27.7624V123.958C445.824 129.044 442.058 133.167 437.412 133.167C432.766 133.167 429 129.044 429 123.958V114.75H388.882C385.764 114.75 382.904 112.863 381.445 109.845C379.988 106.828 380.177 103.176 381.933 100.354L430.391 22.5505C430.523 22.3337 430.663 22.1255 430.809 21.9201C431.555 20.8859 432.47 20.0671 433.48 19.4834C435.434 18.3557 437.747 18.0993 439.891 18.8247ZM429 57.477L404.8 96.3362H429V57.4742V57.477Z" fill="#39414B" />
                        <path d="M492.363 75.5367C491.069 75.5367 489.981 75.055 489.101 74.0917C488.221 73.1283 487.781 71.9383 487.781 70.5217C487.781 69.105 488.221 67.915 489.101 66.9517C489.981 65.9317 491.069 65.4217 492.363 65.4217H521.092C522.386 65.4217 523.473 65.9033 524.353 66.8667C525.233 67.83 525.673 69.02 525.673 70.4367C525.673 71.8533 525.233 73.0717 524.353 74.0917C523.473 75.055 522.386 75.5367 521.092 75.5367H492.363ZM492.363 92.5367C491.069 92.5367 489.981 92.055 489.101 91.0917C488.221 90.1283 487.781 88.9383 487.781 87.5217C487.781 86.105 488.221 84.915 489.101 83.9517C489.981 82.9317 491.069 82.4217 492.363 82.4217H521.092C522.386 82.4217 523.473 82.9033 524.353 83.8667C525.233 84.83 525.673 86.02 525.673 87.4367C525.673 88.8533 525.233 90.0717 524.353 91.0917C523.473 92.055 522.386 92.5367 521.092 92.5367H492.363Z" fill="#39414B" />
                    </svg>
                </div>
                <div className={s.check_container}>
                    <Checkbox
                        id="checkbox1-test3"
                        isChecked={selectedOptions.test3 === 'checkbox1-test3'}
                        onChange={(id) => handleCheckboxChange(id, 'test3')}
                        label="A.3"
                    />
                    <Checkbox
                        id="checkbox2-test3"
                        isChecked={selectedOptions.test3 === 'checkbox2-test3'}
                        onChange={(id) => handleCheckboxChange(id, 'test3')}
                        label="B.5"
                    />
                    <Checkbox
                        id="checkbox3-test3"
                        isChecked={selectedOptions.test3 === 'checkbox3-test3'}
                        onChange={(id) => handleCheckboxChange(id, 'test3')}
                        label="C.1"
                    />
                    <Checkbox
                        id="checkbox4-test3"
                        isChecked={selectedOptions.test3 === 'checkbox4-test3'}
                        onChange={(id) => handleCheckboxChange(id, 'test3')}
                        label="D.2"
                    />
                </div>
            </div>
            {/* <SubmitButton /> */}
            <button className={s.btn_res} onClick={handlePrintResults}>Print Results</button>
        </div>
    )

}

export default TestLogic;